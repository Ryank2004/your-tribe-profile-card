* {
  box-sizing: border-box;
}

html {
  height: 100vh;
}

* {
  margin: 0;
  padding: 0;
  }

body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  font-family: open sans;
  overflow:hidden;
}
h1 {
  color: rgb(97, 54, 19);
  font-size: 4em;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  justify-content: flex-start;
  margin-top: 2rem;

}
p {
  font-size: 1.5em;
  margin: 18px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  justify-content: flex-start;
}

h2 {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  justify-content: flex-start;
  color:#FFFDD1;
  margin-top: 20px;
}
h3 {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  justify-content: flex-start;
  color:#FFFDD1;
  margin-top: 20px;
  font-size: 1.5em;
}
.p2 {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  justify-content: flex-start;
  color:#FFFDD1;
  margin-top: 10px;
  font-size: 14px;
  margin-left: 20px;
  margin-right: 20px;
}

/* hier staat image1 ipv img zodat ik alle fotos kan onderscheiden en verschillende properties kan toepassen */
.image1 {
  position: relative;
  align-items: center;
  top: 1rem;
  border-radius: 3em;
  box-shadow: 0 0 2px 2px rgba(0,0,0,.2);
  transition: .25s .15s;
  width: 18em;
  height: auto;
}
.container {
  width: 450px;
  height: 600px;
  perspective: 700px;
}

.card {
  height: 100%;
  width: 100%;
  position: relative;
  transition: transform 1500ms;
  transform-style: preserve-3d;
}
/* De transition property zorgt ervor dat er een animatie op de 180 graden flip zit */
/* De preserve-3d property staat er zodat mijn card word behandeld als een 3d object. Zonder deze property liggen de kaarten niet de juiste kant op.*/


.front,
.back {
  height: 100%;
  width: 100%;
  position: absolute;
  box-shadow: 0 0 20px 20px rgba(50,50,50,.2);
  border-radius: 2rem;
  backface-visibility: hidden;
}
  /* Hier staat backface-visibility hidden zodat elke keer de achterkant niet zichtbaar is */

.front {
  background: linear-gradient(0deg, rgb(97, 54, 19) 40%, #FFFDD1 100%);
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Er staat >card bij omdat als je hem alleen op card toepast word het heel buggy als je heen en weer gaat. 
Nu staat het bij container want die staat vast omdat die geen animatie heeft */
.container:hover > .card {
  cursor: pointer;
  transform: rotateY(180deg);
}

.back {
  background-color:rgb(97, 54, 19);
  transform: rotateY(180deg);
  display: grid; 
  grid-template-columns: repeat(2, 1fr); 
  grid-template-rows: repeat(2, 1fr); 
  grid-column-gap: 0px;
  grid-row-gap: 0px; 
}

  .topleft { 
    grid-area: 1 / 1 / 2 / 2;
    height: 100%;
    width: 100%; 
  } 
  .downright { 
    grid-area: 2 / 2 / 3 / 3;
    height: 100%;
    width: 100%; 
  } 

  .image2 {
  position: relative;
  align-items: center;
  top:.5em;
  border-radius: 3em;
  box-shadow: 0 0 2px 2px rgba(0,0,0,.2);
  transition: .25s .15s;
  width: 12em;
  height: auto;
  margin-left: 15px;
  }
  .image3 {
    position: relative;
    align-items: center;
    border-radius: 3em;
    box-shadow: 0 0 2px 2px rgba(0,0,0,.2);
    transition: .25s .15s;
    width: 12em;
    height: auto;
    margin-left: 15px;
    bottom: .5em;
    
  

  }